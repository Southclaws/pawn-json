name: Build

on:
  workflow_dispatch:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  RELEASE_ADDS: json.inc

jobs:
  build-windows:
    runs-on: windows-latest
    env:
      RELEASE_BIN: pawn_json
      RUST: stable-i686
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust (rustup)
        run: rustup update ${{ env.RUST }} --no-self-update && rustup default ${{ env.RUST }}

      - name: Build
        run: cargo build --release

      - name: Create artifacts directory
        run: |
          mkdir artifacts/plugins
          mkdir artifacts/pawno/include

      - name: Copy files to artifacts directory
        run: |
          cp .\target\release\${{ env.RELEASE_BIN }}.dll .\artifacts\plugins\json.dll
          cp .\${{ env.RELEASE_ADDS }} .\artifacts\pawno\include\${{ env.RELEASE_ADDS }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: json-windows
          path: artifacts/

  build-linux:
    runs-on: ubuntu-20.04
    env:
      RUST: i686-unknown-linux-gnu
      RELEASE_BIN: libpawn_json
    steps:
      - uses: actions/checkout@v4

      - name: Install gcc-multilib
        run: sudo apt update && sudo apt install gcc-multilib -y

      - name: Install Rust (rustup)
        run: rustup target add ${{ env.RUST }}

      - name: Build
        run: cargo build --release --target ${{ env.RUST }}

      - name: Create artifacts directory
        run: |
          mkdir -p artifacts/plugins
          mkdir -p artifacts/pawno/include

      - name: Copy files to artifacts directory
        run: |
          cp target/${{ env.RUST }}/release/${{ env.RELEASE_BIN }}.so artifacts/plugins/json.so
          cp ${{ env.RELEASE_ADDS }} artifacts/pawno/include/${{ env.RELEASE_ADDS }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: json-linux
          path: artifacts/
